@model  AlertProfiler.CoreObject.DataTransferObjects.UserModel


@{
    ViewBag.Title = "Add User";
}

@section MainContent {

    <form action="~/Home/AddUser" method="post">
        @Html.AntiForgeryToken()

        <div class="row">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @if (!string.IsNullOrEmpty(Model.ResponseMessage))
            {
                <div class="alert alert-danger alert-dismissable">
                    @Model.ResponseMessage
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">x</button>
                </div>
            }

            <div class="col-md-8 col-md-offset-2 col-sm-6 col-sm-offset-3 col-xs-12 col-xs-offset-0">
                <h4 class="page-head-line">Alert Profiler</h4>
                <div class="panel-body" id="LoginDiv">
                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                    <div class="form-group input-group">
                        <span class="input-group-addon"><i class="fa fa-user"></i></span>
                        @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "UserId", maxlength = 32, autocomplete = "off" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                    <div class="form-group input-group">
                        <span class="input-group-addon"><i class="fa fa-lock"></i></span>
                        @Html.EditorFor(model => model.BranchCode, new { @class = "form-control input-sm", placeholder = "Branch Code", maxlength = 32, autocomplete = "off" })
                    </div>
                    @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                    <div class="form-group input-group">
                        <span class="input-group-addon"><i class="fa fa-lock"></i></span>
                        @Html.EditorFor(model => model.RoleId, new { @class = "form-control input-sm", placeholder = "User Type", maxlength = 32, autocomplete = "off" })
                    </div>
                    @Html.ValidationMessageFor(model => model.RoleAction, "", new { @class = "text-danger" })
                    <div class="form-group input-group">
                        <span class="input-group-addon"><i class="fa fa-lock"></i></span>
                        @Html.EditorFor(model => model.RoleAction, new { @class = "form-control input-sm", placeholder = "Role", maxlength = 32, autocomplete = "off" })
                    </div>
                    <div>
                        <input type="submit" value="Add User" class="btn btn-primary btn-xs" />
                    </div>
                </div>
            </div>
        </div>

    </form>
}
